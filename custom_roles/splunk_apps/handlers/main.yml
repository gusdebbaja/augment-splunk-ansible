---
# =============================================================================
# handlers file for splunk_apps custom role - NAMESPACED HANDLERS
# =============================================================================
# Purpose: Provides enhanced handlers for app deployment with proper namespacing
# Namespace: All handlers prefixed with 'splunk_apps:' to avoid conflicts
# =============================================================================

# Enhanced handlers unique to splunk_apps role - Apply SH cluster bundle
- name: "splunk_apps: fix shcluster permissions"
  file:
    path: "{{ splunk_home }}/etc/shcluster/apps"
    owner: "{{ splunk_nix_user | default('splunk') }}"
    group: "{{ splunk_nix_group | default('splunk') }}"
    mode: '0755'
    recurse: yes
  become: true
  when: "'shdeployer' in group_names"
  listen: "splunk_apps: apply shcluster-bundle with permissions"

- name: "splunk_apps: apply shcluster bundle"
  command: "{{ splunk_home }}/bin/splunk apply shcluster-bundle -preserve-lookups true --answer-yes -auth {{ splunk_auth | default('admin:' ~ splunk_admin_password) }} -target {{ target_shc_uri | default('https://' + groups[target_shc_group_name | default('search')][0] + ':8089') }}"
  become: true
  become_user: "{{ splunk_nix_user }}"
  register: apply_shcluster_bundle_result
  changed_when: apply_shcluster_bundle_result.rc == 0
  failed_when: apply_shcluster_bundle_result.rc != 0
  retries: "{{ splunk_apply_shcluster_bundle_retries | default(3) }}"
  delay: "{{ splunk_apply_shcluster_bundle_delay | default(10) }}"
  no_log: false
  when: 
    - "'shdeployer' in group_names"
    - "splunk_component | default('') == 'sh_deployer'"
    - "target_shc_group_name is defined or target_shc_uri is defined"
  listen: "splunk_apps: apply shcluster-bundle with permissions"

# Enhanced deployment server reload
- name: "splunk_apps: enhanced reload deployment server"
  command: "{{ splunk_home }}/bin/splunk reload deploy-server -auth {{ splunk_auth | default('admin:' ~ splunk_admin_password) }}"
  become: true
  become_user: "{{ splunk_nix_user }}"
  no_log: false
  when: 
    - "splunk_component | default('') == 'deployment_server'"
  listen: "splunk_apps: enhanced reload deployment server"

# Fix search head permissions
- name: "splunk_apps: fix search head permissions"
  file:
    path: "{{ splunk_home }}/etc/apps"
    owner: "{{ splunk_nix_user | default('splunk') }}"
    group: "{{ splunk_nix_group | default('splunk') }}"
    mode: '0755'
    recurse: yes
  become: true
  listen: "splunk_apps: fix search head permissions"

# Enhanced wait handler with better error handling
- name: "splunk_apps: wait for splunkd with retry"
  wait_for:
    port: "{{ splunkd_port | default('8089') }}"
    state: started
    delay: 5
    timeout: 120
  retries: 3
  delay: 10
  listen: "splunk_apps: wait for splunkd"

# Delegate to main role handlers for standard operations
- name: "splunk_apps: restart splunk"
  service:
    name: "{{ splunk_service | default('Splunkd') }}"
    state: restarted
  become: true
  listen: "splunk_apps: restart splunk"

- name: "splunk_apps: apply indexer cluster bundle"
  command: "{{ splunk_home }}/bin/splunk apply cluster-bundle --answer-yes --skip-validation -auth {{ splunk_auth | default('admin:' ~ splunk_admin_password) }}"
  become: true
  become_user: "{{ splunk_nix_user }}"
  register: apply_cluster_bundle_result
  changed_when: apply_cluster_bundle_result.rc == 0
  failed_when: apply_cluster_bundle_result.rc != 0
  retries: "{{ splunk_apply_cluster_bundle_retries | default(3) }}"
  delay: "{{ splunk_apply_cluster_bundle_delay | default(10) }}"
  no_log: false
  when: 
    - "'clustermanager' in group_names or 'clustermaster' in group_names"
    - "splunk_component | default('') == 'cluster_manager'"
  listen: "splunk_apps: apply indexer cluster bundle"

# Fix general splunk permissions for deployed apps
- name: "splunk_apps: fix splunk permissions"
  file:
    path: "{{ item }}"
    owner: "{{ splunk_nix_user | default('splunk') }}"
    group: "{{ splunk_nix_group | default('splunk') }}"
    mode: '0755'
    recurse: yes
  become: true
  with_items:
    - "{{ splunk_home }}/etc/apps"
    - "{{ splunk_home }}/etc/deployment-apps"
    - "{{ splunk_home }}/etc/master-apps"
    - "{{ splunk_home }}/etc/shcluster/apps"
  when: item is exists
  failed_when: false
  listen: "splunk_apps: fix splunk permissions"