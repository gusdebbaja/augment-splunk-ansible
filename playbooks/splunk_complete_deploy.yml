---
# Complete Splunk Deployment Orchestrator
# Purpose: Full deployment of Splunk software + apps for new environments
# Usage: ansible-playbook -i inventory.yml splunk_complete_deploy.yml --ask-vault-pass

- name: Complete Splunk Environment Deployment
  hosts: localhost
  gather_facts: false
  become: false
  
  vars:
    playbook_dir: "{{ playbook_dir }}"
    
  tasks:
    - name: Display deployment plan
      debug:
        msg:
          - "=== COMPLETE SPLUNK DEPLOYMENT PLAN ==="
          - ""
          - "Phase 1: Install Splunk software on all hosts"
          - "Phase 2: Deploy applications (static + templates)"
          - "Phase 3: Final verification"
          - ""
          - "This will take approximately 15-30 minutes depending on environment size"
          - ""
          - "Inventory groups detected:"
          - "  License Master: {{ groups['licensemaster'] | default(['None']) | join(', ') }}"
          - "  Deployment Server: {{ groups['deploymentserver'] | default(['None']) | join(', ') }}"
          - "  Indexers: {{ groups['indexer'] | default(['None']) | join(', ') }}"
          - "  Search Heads: {{ groups['search'] | default(['None']) | join(', ') }}"
          - "  Heavy Forwarders: {{ groups['heavyforwarder'] | default(['None']) | join(', ') }}"
          - "  Universal Forwarders: {{ groups['uf'] | default([]) | length }} hosts"

    - name: Confirm deployment
      pause:
        prompt: "Continue with complete deployment? (Press Enter to continue, Ctrl+C to abort)"

# Phase 1: Install Splunk Software
- name: Install Splunk Software
  import_playbook: splunk_install.yml

# Phase 2: Deploy Applications  
- name: Deploy Splunk Applications
  import_playbook: splunk_apps_deploy.yml

# Phase 3: Final Verification
- name: Final Environment Verification
  hosts: all
  gather_facts: true
  become: true
  
  tasks:
    - name: Verify Splunk is running
      command: "{{ splunk_home | default('/opt/splunk') }}/bin/splunk status"
      register: final_splunk_status
      become_user: "{{ splunk_nix_user | default('splunk') }}"

    - name: Check app count
      find:
        paths: "{{ splunk_home | default('/opt/splunk') }}/etc/apps"
        file_type: directory
      register: final_app_count
      when: "'uf' not in group_names"

    - name: Check web interface accessibility
      uri:
        url: "https://{{ ansible_default_ipv4.address | default(ansible_host) }}:8000"
        method: GET
        validate_certs: false
        status_code: [200, 401, 302]  # Login page or redirect is OK
      register: web_check
      when: "'search' in group_names or 'licensemaster' in group_names"
      failed_when: false

    - name: Store verification results
      set_fact:
        verification_results:
          host: "{{ inventory_hostname }}"
          groups: "{{ group_names }}"
          splunk_status: "{{ final_splunk_status.stdout.split('\\n')[0] }}"
          app_count: "{{ final_app_count.files | length if final_app_count is defined else 'N/A' }}"
          web_accessible: "{{ web_check.status is defined and web_check.status in [200, 401, 302] }}"

# Final Summary
- name: Display Final Deployment Summary
  hosts: localhost
  gather_facts: false
  
  tasks:
    - name: Collect all verification results
      set_fact:
        all_results: "{{ groups['all'] | map('extract', hostvars, 'verification_results') | list }}"

    - name: Display complete deployment summary
      debug:
        msg:
          - "=== COMPLETE SPLUNK DEPLOYMENT FINISHED ==="
          - ""
          - "Deployment Status by Host:"
          - "{% for result in all_results %}  {{ result.host }} ({{ result.groups | join(',') }}): {{ result.splunk_status }}{% if result.app_count != 'N/A' %} - {{ result.app_count }} apps{% endif %}{% endfor %}"
          - ""
          - "Web Interface Access:"
          - "{% for result in all_results %}{% if result.web_accessible is defined %}  https://{{ hostvars[result.host]['ansible_host'] | default(result.host) }}:8000 - {% if result.web_accessible %}✓ Accessible{% else %}✗ Not accessible{% endif %}{% endif %}{% endfor %}"
          - ""
          - "Next Steps:"
          - "1. Log into Splunk Web interfaces to verify functionality"
          - "2. Check forwarder connections to deployment server"
          - "3. Verify data flow from forwarders to indexers"
          - "4. Test distributed search capabilities"
          - "5. Review and customize deployed apps as needed"
          - ""
          - "Day-to-day operations:"
          - "  App deployments: ansible-playbook splunk_apps_deploy.yml"
          - "  Service restarts: ansible-playbook splunk_restart.yml"
          - "  Verification: ansible-playbook splunk_verify.yml"