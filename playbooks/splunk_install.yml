---
# Playbook to perform either a splunk installation or upgrade with cluster configuration
# Phase 1: Install/Upgrade Splunk
- hosts: all
  roles:
    - ../roles/ansible-role-for-splunk
  serial: 50
  vars:
    deployment_task: check_splunk.yml
  post_tasks:
    - name: Ensure pass4SymmKey is set on License Master (fix for signature mismatch)
      ini_file:
        path: "{{ splunk_home }}/etc/system/local/server.conf"
        section: general
        option: pass4SymmKey
        value: "{{ splunk_general_key }}"
        owner: "{{ splunk_nix_user }}"
        group: "{{ splunk_nix_group }}"
        mode: 0600
      become: true
      when:
        - splunk_license_group not in ["Peer", "Forwarder"]
        - splunk_license_group is defined
        - splunk_general_key is defined
        - splunk_general_key != "undefined"
      register: lm_key_updated
      no_log: true

    - name: Restart Splunk on License Master if key was updated
      service:
        name: "{{ 'SplunkForwarder' if 'uf' in group_names else 'Splunkd' }}"
        state: restarted
      become: true
      when:
        - lm_key_updated is defined
        - lm_key_updated.changed

# Phase 2: Configure Search Head Cluster
#- hosts: shdeployer
#  roles:
#    - ../roles/ansible-role-for-splunk
#  vars:
#    deployment_task: configure_shc_deployer.yml
#
#- hosts: search
#  roles:
#    - ../roles/ansible-role-for-splunk
#  vars:
#    deployment_task: configure_shc_members.yml

#- name: Configure Search Head Cluster Captain (only if SH Deployer exists)
#  hosts: search[0]
#  gather_facts: false
#  tasks:
#    - name: Configure SH cluster captain
#      include_role:
#        name: ../roles/ansible-role-for-splunk
#      vars:
#        deployment_task: configure_shc_captain.yml
#      when: groups['shdeployer'] is defined and groups['shdeployer'] | length > 0

# Phase 3: Configure Indexer Cluster
- hosts: clustermanager
  roles:
    - ../roles/ansible-role-for-splunk
  vars:
    deployment_task: configure_idxc_manager.yml

- hosts: indexer
  roles:
    - ../roles/ansible-role-for-splunk
  vars:
    deployment_task: configure_idxc_member.yml

# Phase 3.5: Connect Search Heads to Indexer Cluster
- hosts: search
  roles:
    - ../roles/ansible-role-for-splunk
  vars:
    deployment_task: configure_idxc_sh.yml

# Phase 4: Configure Deployment Clients
- hosts: search:heavyforwarder
  roles:
    - ../roles/ansible-role-for-splunk
  vars:
    deployment_task: configure_deploymentclient.yml

# Phase 5: Enable HTTP Event Collector
- hosts: heavyforwarder:indexer
  gather_facts: false
  tasks:
    - name: Enable HTTP Event Collector
      shell: |
        sudo -u {{ splunk_nix_user }} {{ splunk_home }}/bin/splunk http-event-collector enable -uri https://{{ splunk_mgmt_uri }}:{{ splunkd_port }} -auth {{ splunk_admin_username }}:{{ splunk_admin_password }}
      when: enable_hec is defined and enable_hec | bool
      register: hec_result
      
    - name: Display HEC enablement result
      debug:
        var: hec_result.stdout_lines
      when: hec_result is defined and hec_result.stdout_lines is defined

# Phase 6: Configure Distributed Monitoring Console
- hosts: dmc
  roles:
    - ../roles/ansible-role-for-splunk
  vars:
    deployment_task: configure_dmc.yml
  tasks:
    - name: Enable forwarder monitoring in DMC
      community.general.ini_file:
        path: "{{ splunk_home }}/etc/apps/splunk_monitoring_console/local/distsearch.conf"
        section: 'distributedSearch'
        option: 'servers'
        value: "{% for host in groups['heavyforwarder'] %}{{ hostvars[host].splunk_mgmt_uri }}:{{ splunkd_port }}{% if not loop.last %},{% endif %}{% endfor %}"
        owner: "{{ splunk_nix_user }}"
        group: "{{ splunk_nix_group }}"
        mode: 0644
        create: yes
      become: true
      when: groups['heavyforwarder'] is defined and groups['heavyforwarder'] | length > 0
      notify: restart splunk

    - name: Configure forwarder monitoring settings
      community.general.ini_file:
        path: "{{ splunk_home }}/etc/apps/splunk_monitoring_console/local/splunk_monitoring_console_assets.conf"
        section: 'settings'
        option: 'configuredPeers'
        value: "{% for host in groups['all'] %}{{ hostvars[host].splunk_mgmt_uri }}:{{ splunkd_port }}{% if not loop.last %},{% endif %}{% endfor %}"
        owner: "{{ splunk_nix_user }}"
        group: "{{ splunk_nix_group }}"
        mode: 0644
        create: yes
      become: true
      notify: restart splunk