---
# configure-hec-heavyforwarders.yml
# Configure HTTP Event Collector on Heavy Forwarders

- name: Configure HEC on Heavy Forwarders
  hosts: heavyforwarder
  become: true
  gather_facts: true
  vars:
    splunk_home: "/opt/splunk"
    splunk_user: "splunk"
    splunk_group: "splunk"
    
    # HEC Configuration
    hec_tokens:
      - name: "hf_hec_token"
        value: "{{ hec_token_value | default('12345678-1234-1234-1234-123456789012') }}"
        sourcetype: "_json"
        index: "main"
        source: "hf_hec"
        
  tasks:
    - name: Check if Splunk is installed
      stat:
        path: "{{ splunk_home }}/bin/splunk"
      register: splunk_installed
      
    - name: Fail if Splunk is not installed
      fail:
        msg: "Splunk not found at {{ splunk_home }}"
      when: not splunk_installed.stat.exists

    - name: Check if splunk_httpinput app exists
      stat:
        path: "{{ splunk_home }}/etc/apps/splunk_httpinput"
      register: httpinput_app_exists

    - name: Create local directory in splunk_httpinput app
      file:
        path: "{{ splunk_home }}/etc/apps/splunk_httpinput/local"
        state: directory
        owner: "{{ splunk_user }}"
        group: "{{ splunk_group }}"
        mode: '0755'
      when: httpinput_app_exists.stat.exists

    - name: Backup existing HEC configuration
      copy:
        src: "{{ splunk_home }}/etc/apps/splunk_httpinput/local/inputs.conf"
        dest: "{{ splunk_home }}/etc/apps/splunk_httpinput/local/inputs.conf.backup.{{ ansible_date_time.epoch }}"
        owner: "{{ splunk_user }}"
        group: "{{ splunk_group }}"
        mode: '0644'
        remote_src: true
      when: 
        - httpinput_app_exists.stat.exists
        - httpinput_inputs_conf.stat.exists
      vars:
        httpinput_inputs_conf: "{{ ansible_facts.stat if ansible_facts.stat is defined else {'stat': {'exists': false}} }}"
      ignore_errors: true

    - name: Configure HEC inputs.conf
      template:
        src: hec_inputs.conf.j2
        dest: "{{ splunk_home }}/etc/apps/splunk_httpinput/local/inputs.conf"
        owner: "{{ splunk_user }}"
        group: "{{ splunk_group }}"
        mode: '0644'
        backup: true
      when: httpinput_app_exists.stat.exists
      notify: restart splunk

    - name: Create HEC inputs.conf template inline
      copy:
        content: |
          # HTTP Event Collector Configuration
          # Generated by Ansible on {{ ansible_date_time.iso8601 }}
          # Host: {{ inventory_hostname }}
          
          [http]
          disabled = 0
          enableSSL = true
          port = 8088
          
          # Default HEC settings
          [http://default]
          disabled = 0
          enableSSL = true
          dedicatedIoThreads = 2
          maxSockets = 0
          maxThreads = 0
          
          {% for token in hec_tokens %}
          # Token: {{ token.name }}
          [http://{{ token.name }}]
          disabled = 0
          token = {{ token.value }}
          sourcetype = {{ token.sourcetype }}
          index = {{ token.index }}
          source = {{ token.source }}
          
          {% endfor %}
        dest: "{{ splunk_home }}/etc/apps/splunk_httpinput/local/inputs.conf"
        owner: "{{ splunk_user }}"
        group: "{{ splunk_group }}"
        mode: '0644'
        backup: true
      when: httpinput_app_exists.stat.exists
      notify: restart splunk

    - name: Verify HEC configuration
      slurp:
        path: "{{ splunk_home }}/etc/apps/splunk_httpinput/local/inputs.conf"
      register: hec_config_content
      when: httpinput_app_exists.stat.exists

    - name: Display HEC configuration
      debug:
        msg: "{{ hec_config_content.content | b64decode | split('\n') }}"
      when: hec_config_content is defined

    - name: Test HEC endpoint (after restart)
      uri:
        url: "https://{{ inventory_hostname }}:8088/services/collector/health"
        method: GET
        validate_certs: false
        timeout: 10
      register: hec_health_check
      ignore_errors: true
      delegate_to: localhost

    - name: Display HEC health check result
      debug:
        msg:
          - "HEC Health Check Status: {{ hec_health_check.status | default('Failed') }}"
          - "HEC Endpoint: https://{{ inventory_hostname }}:8088/services/collector/health"
          - "Response: {{ hec_health_check.json | default('No response') }}"
      when: hec_health_check is defined

  handlers:
    - name: restart splunk
      systemd:
        name: splunk
        state: restarted
      become: true